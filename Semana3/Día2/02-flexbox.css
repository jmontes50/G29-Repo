* {
  margin:0;
  padding:0;
  box-sizing: border-box;
}

.padre {
  height: 500px;
  /* % toma en cuenta el tamaño del elemento padre inmediato */
  width: 100%; /*el elemento en este caso es el body*/
  border:3px solid blue;
  display: flex;
  /* justify-content me permite alinear horizontalmente */
  /* center, centra a los elementos */
  /* space-between, entre elementos */
  /* space-around, alrededor de elementos */
  /* space-evenly, espacio parejo entre y al costado */
  justify-content: center;
  /* align-items, alinea verticalmente */
  /* flex-start los pone al inicio */
  /* center, centra */
  /* flex-end los pone al final */
  align-items: center;
  /* gap, brecha */
  gap: 20px;
  /* flex-direction, que indica la dirección del flex */
  /* propieddes como justify-content y align-items cambian */
  flex-direction: row;
  /* wrap, no modifica el tamaño de los elementos hijos, si no hace que "colapsen" a la parte inferior */
  /* nowrap, si es que falta espacio cambia el tamaño de los elementos hijos */
  flex-wrap: nowrap;
  /* align-content funciona cuando flex-wrap: wrap, y cambia como sea agrupan los elementos cuando colapsan */
  /* center, space-between, space-evenly */
  /* align-content:center; */
}

.caja{
  width: 100px;
  height: 100px;
  border:3px solid red;
  background-color: coral;
}

/* necesitan nowrap */
/* flex-shrink y flex-grow */
/* grow hace crecer a los elementos en la proporción dada tomando de referencia el espacio sobrante */
/* shrink reduce a los elementos en la proporción dada tomando de ref. el espacio faltante si se reduce el contenedor padre */
.caja:nth-of-type(1){
  flex-grow: 4;
}

.caja:nth-of-type(2){
  flex-grow: 1;
}

.caja:nth-of-type(3){
  flex-shrink: 4;
}

.caja:nth-of-type(4){
  flex-shrink: 2;
}
